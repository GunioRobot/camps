#!/usr/local/bin/perl

# new camp creation script

use strict;
use warnings;
use Getopt::Long;
use lib '/home/camp/lib';
use Camp::Master;
use Data::Dumper;

*STDOUT->autoflush(1);
*STDERR->autoflush(1);

die "Don't run this as root!\n" if $< == 0;

my %opt;
GetOptions(
	\%opt,
	qw(
		comment=s
		number=i
		replace!
		skipdb
		skipcamp
		help
		type=s
		vcs=s
	)
);

if ($opt{help}) {
	my $types;
    eval {
		$types = join '', map { <<EOL } camp_type_list();
            $_->{type}: $_->{description}
EOL
	};
	$types = "Could not find types: $@" if $@;
	print <<EOH;
Usage: mkcamp --comment="comments here" [options]

Options:

--comment   Required comment explaining the purpose of this new camp.

--number    Specify the camp number to be made instead of automatically
            determining it.

--skipcamp  Do not add this camp to the database. Requires --number.

--skipdb    Skip database creation.

--vcs       Specify version control system to use for working copy checkout.
            Options are "svn" (default) and "svk".

--type      The type of camp to be made; required.
            Available types are:
$types

--help      This help screen
EOH
	exit;
}

die "No type specified!\n" unless defined $opt{type};

die "comment is required; run with --help for more info\n"
	unless $opt{comment} or $opt{skipcamp};

$opt{vcs} ||= 'svn';

initialize(
    type => $opt{type},
	vcs_type => $opt{vcs},
    user => $<,
);

# Get camp # and verify everything's ok with camp database
unless ($opt{number} and $opt{number} =~ /^\d+$/) {
	if ($opt{skipcamp}) {
		die "number must be specified if skipping camp accounting\n";
	}
    $opt{number} = get_next_camp_number();
}

# initialize the configuration hash
my $conf = config_hash( $opt{number} );
print "Configuration hash:\n", Dumper($conf);

# Add to camp database
register_camp($opt{comment}) unless ($opt{skipcamp});

# Check out bulk of files from version control repository
vcs_checkout();

# Must prepare database before installing templates; do so now.
prepare_database( $opt{replace} ) unless $opt{skipdb};

# Perform simple copy/symlink operations
process_copy_paths();

# Substitute tokens in config files
install_templates();

# Prepare appserver(s)
prepare_ic();
prepare_rails();

# Create Apache files
prepare_apache();

# (Re)start facilities
if ($opt{skipdb}) {
	print <<'END';

Of course, you specified --skipdb, so there may be no database, and
your app server is not running. It's up to you to deal with that.
END
}
else {
    server_control(
        service => 'all',
        action  => 'restart',
    );
}


if ($opt{skipcamp}) {
	print <<'END';

You specified --skipcamp, so there has been no accounting of this camp
instance in the camps table in the camp database. Please deal with that
however is appropriate.
END
}

